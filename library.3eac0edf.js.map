{"mappings":"oeAAAA,EAAA,S,iCCAA,IAAAC,EAAAD,EAAA,SCAO,SAASE,GAA4BC,YAC1CA,EAAWC,GACXA,EAAEC,MACFA,EAAKC,OACLA,EAAMC,aACNA,EAAYC,aACZA,IAEA,MAAMC,EAAaH,EAAOI,KAAIC,GAAMA,EAAGC,OAAMC,KAAK,MAC5CC,EAASN,EAAaO,QAAQ,GACpC,MAAO,sBACUX,iGACoDD,sBAAgCE,4DACtEA,6BACbD,oEACmBK,4DACWF,EAAaS,MACnD,EACA,wCACqCF,iCAGjD,C,8BDaAG,EAAAC,KAAKC,cAAcC,iBAAiB,SA9BpC,WACEH,EAAAC,KAAKG,WAAWC,UAAY,GACFC,EAAAC,mBAA4B,WACpCC,SAAQC,KACxB,EAAAzB,EAAA0B,gBAAeD,GACZE,MAAKC,IACJZ,EAAAC,KAAKG,WAAWS,mBACd,YACA5B,EAA4B2B,EAAIE,MAAI,IAGvCC,OAAMC,GAAOC,QAAQC,IAAI,qBAAsBF,IAAA,GAEtD,IAmBAhB,EAAAC,KAAKkB,YAAYhB,iBAAiB,SAjBlC,WACEH,EAAAC,KAAKG,WAAWC,UAAY,GACJC,EAAAC,mBAA4B,SACpCC,SAAQC,KACtB,EAAAzB,EAAA0B,gBAAeD,GACZE,MAAKC,IACJZ,EAAAC,KAAKG,WAAWS,mBACd,YACA5B,EAA4B2B,EAAIE,MAAI,IAGvCC,OAAMC,GAAOC,QAAQC,IAAI,qBAAsBF,IAAA,GAEtD,I","sources":["src/library.js","src/js/loading_library.js","src/markup/markup-library-card.js"],"sourcesContent":["import './js/refs';\nimport './js/fetch';\nimport './js/modal';\nimport './js/searchFilms.js';\nimport './js/loading_library';\nimport './js/top-page';\n","import { fetchByMovieId, fetchAllByMovieId } from './fetch';\nimport { createMarkupCardsForLibrary } from '../markup/markup-library-card';\nimport { refs } from './refs';\nimport * as lsModule from './local-storage';\n\nfunction onWatchedBtnclick() {\n  refs.galleryLib.innerHTML = '';\n  const watchedLocStorage = lsModule.loadFromLocStorage('watched');\n  watchedLocStorage.forEach(element => {\n    fetchByMovieId(element)\n      .then(res => {\n        refs.galleryLib.insertAdjacentHTML(\n          'beforeend',\n          createMarkupCardsForLibrary(res.data)\n        );\n      })\n      .catch(err => console.log('Catched error >>> ', err));\n  });\n}\n\nfunction onQuereBtnclick() {\n  refs.galleryLib.innerHTML = '';\n  const quereLocStorage = lsModule.loadFromLocStorage('queue');\n  quereLocStorage.forEach(element => {\n    fetchByMovieId(element)\n      .then(res => {\n        refs.galleryLib.insertAdjacentHTML(\n          'beforeend',\n          createMarkupCardsForLibrary(res.data)\n        );\n      })\n      .catch(err => console.log('Catched error >>> ', err));\n  });\n}\n\nrefs.watchedBtnLib.addEventListener('click', onWatchedBtnclick);\n\nrefs.quereBtnLib.addEventListener('click', onQuereBtnclick);\n","export function createMarkupCardsForLibrary({\n  poster_path,\n  id,\n  title,\n  genres,\n  release_date,\n  vote_average,\n}) {\n  const genreNames = genres.map(el => el.name).join(', ');\n  const rating = vote_average.toFixed(2);\n  return `\n    <li data-id=\"${id}\" class=\"movie__item\">\n      <img class=\"movie__image\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"Poster of '${title}' movie\" width=\"394\" />\n      <h2 class=\"movie__title\">${title}</h2>\n      <p data-id=\"${id}\" class=\"movie__details\">\n          <span class=\"movie__genre\">${genreNames}</span\n          >|<span class=\"movie__year-of-relise\">${release_date.slice(\n            0,\n            4\n          )}</span><span class=\"movie__rating\">${rating}</span>\n      </p>\n    </li>`;\n}\n"],"names":["parcelRequire","$cyIMT","$c6fcbd7e122b7c50$export$8592154eba171398","poster_path","id","title","genres","release_date","vote_average","genreNames","map","el","name","join","rating","toFixed","slice","$krGWQ","refs","watchedBtnLib","addEventListener","galleryLib","innerHTML","$b5rV1","loadFromLocStorage","forEach","element","fetchByMovieId","then","res","insertAdjacentHTML","data","catch","err","console","log","quereBtnLib"],"version":3,"file":"library.3eac0edf.js.map"}