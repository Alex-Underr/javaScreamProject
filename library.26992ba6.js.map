{"mappings":"gfAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,SCAO,SAASE,GAA4BC,YAC1CA,EAAWC,GACXA,EAAEC,MACFA,EAAKC,OACLA,EAAMC,aACNA,EAAYC,aACZA,IAEA,MAAMC,EAAaH,EAAOI,KAAIC,GAAMA,EAAGC,OAAMC,KAAK,MAC5CC,EAASN,EAAaO,QAAQ,GACpC,MAAO,sBACUX,iGACoDD,sBAAgCE,4DACtEA,6BACbD,oEACmBK,4DACWF,EAAaS,MACnD,EACA,wCACqCF,iCAGjD,C,gDDhBA,WACEG,EAAAC,KAAKC,QAAQC,UAAY,GAUzB,MAAMC,EAAoB,IARLC,aAAaC,QAAQ,WACtCC,KAAKC,MAAMH,aAAaC,QAAQ,YAChC,MAEeD,aAAaC,QAAQ,SACpCC,KAAKC,MAAMH,aAAaC,QAAQ,UAChC,IAIJ,GAAiC,IAA7BF,EAAkBK,OAIpB,OAHAT,EAAAC,KAAKC,QAAQQ,UAAUC,IAAI,UAC3BX,EAAAC,KAAKW,OAAOF,UAAUG,OAAO,UElBAlB,EFmBZ,eElBnBmB,OAAOC,iBAAiB,QAAQC,IAC9BhB,EAAAC,KAAKW,OAAOT,UCLT,SAAkCR,GACvC,MAAO,uEAESA,qMAMlB,CDJ4B,CAAyBA,GACjD,MAAMsB,EAAQC,SAASC,cAAc,SACrCC,YAAW,WACTH,EAAMI,MAAMC,QAAU,CACxB,GAAG,QANA,IAA0B3B,EFsB/BK,EAAAC,KAAKC,QAAQQ,UAAUG,OAAO,UAC9BT,EAAkBmB,SAAQC,KACxB,EAAAxC,EAAAyC,gBAAeD,GACZE,MAAKC,IACJ3B,EAAAC,KAAKC,QAAQ0B,mBACX,YACA3C,EAA4B0C,EAAIE,MAAI,IAGvCC,OAAMC,GAAOC,QAAQC,IAAI,qBAAsBF,IAAA,GAEtD,CA2CAG,GAEAlC,EAAAC,KAAKkC,cAAcpB,iBAAiB,SA3CpC,WACEf,EAAAC,KAAKC,QAAQC,UAAY,GACzB,MAAMiC,EAAoBC,EAAAC,mBAA4B,WAClDF,EACFA,EAAkBb,SAAQC,KACxB,EAAAxC,EAAAyC,gBAAeD,GACZE,MAAKC,IACJ3B,EAAAC,KAAKC,QAAQ0B,mBACX,YACA3C,EAA4B0C,EAAIE,MAAI,IAGvCC,OAAMC,GAAOC,QAAQC,IAAI,qBAAsBF,IAAA,IAGpDC,QAAQC,IAAI,8BAEhB,IA4BAjC,EAAAC,KAAKsC,YAAYxB,iBAAiB,SA1BlC,WACEf,EAAAC,KAAKC,QAAQC,UAAY,GACzB,MAAMqC,EAAkBH,EAAAC,mBAA4B,SAChDE,EACFA,EAAgBjB,SAAQC,KACtB,EAAAxC,EAAAyC,gBAAeD,GACZE,MAAKC,IACJ3B,EAAAC,KAAKC,QAAQ0B,mBACX,YACA3C,EAA4B0C,EAAIE,MAAI,IAGvCC,OAAMC,GAAOC,QAAQC,IAAI,qBAAsBF,IAAA,IAMpDC,QAAQC,IAAI,+BAEhB,I","sources":["src/library.js","src/js/loading_library.js","src/markup/markup-library-card.js","src/js/type-writer-effect.js","src/markup/markup-notification.js"],"sourcesContent":["import './js/refs';\nimport './js/fetch';\nimport './js/modal';\nimport './js/loading_library';\nimport './js/top-page';\nimport './js/screen-theme';\n","import { fetchByMovieId } from './fetch';\nimport { createMarkupCardsForLibrary } from '../markup/markup-library-card';\nimport { refs } from './refs';\nimport { typeWriterEffect } from './type-writer-effect';\nimport * as lsModule from './local-storage';\n\nfunction startPageLibrary() {\n  refs.gallery.innerHTML = '';\n\n  let watchedLibrary = localStorage.getItem('watched')\n    ? JSON.parse(localStorage.getItem('watched'))\n    : [];\n\n  let queueLibrary = localStorage.getItem('queue')\n    ? JSON.parse(localStorage.getItem('queue'))\n    : [];\n\n  const libraryLocStorage = [...watchedLibrary, ...queueLibrary];\n\n  if (libraryLocStorage.length === 0) {\n    refs.gallery.classList.add('hidden');\n    refs.notifi.classList.remove('hidden');\n    typeWriterEffect('library');\n    return;\n  }\n  refs.gallery.classList.remove('hidden');\n  libraryLocStorage.forEach(element => {\n    fetchByMovieId(element)\n      .then(res => {\n        refs.gallery.insertAdjacentHTML(\n          'beforeend',\n          createMarkupCardsForLibrary(res.data)\n        );\n      })\n      .catch(err => console.log('Catched error >>> ', err));\n  });\n}\n\nfunction onWatchedBtnclick() {\n  refs.gallery.innerHTML = '';\n  const watchedLocStorage = lsModule.loadFromLocStorage('watched');\n  if (watchedLocStorage) {\n    watchedLocStorage.forEach(element => {\n      fetchByMovieId(element)\n        .then(res => {\n          refs.gallery.insertAdjacentHTML(\n            'beforeend',\n            createMarkupCardsForLibrary(res.data)\n          );\n        })\n        .catch(err => console.log('Catched error >>> ', err));\n    });\n  } else {\n    console.log('You have not watched movies');\n  }\n}\n\nfunction onQueueBtnclick() {\n  refs.gallery.innerHTML = '';\n  const queueLocStorage = lsModule.loadFromLocStorage('queue');\n  if (queueLocStorage) {\n    queueLocStorage.forEach(element => {\n      fetchByMovieId(element)\n        .then(res => {\n          refs.gallery.insertAdjacentHTML(\n            'beforeend',\n            createMarkupCardsForLibrary(res.data)\n          );\n        })\n        .catch(err => console.log('Catched error >>> ', err));\n    });\n  } else {\n    // refs.gallery.classList.add('hidden');\n    // refs.notifi.classList.remove('hidden');\n    // typeWriterEffect('queue');\n    console.log('You have not movies in queue');\n  }\n}\n\nstartPageLibrary();\n\nrefs.watchedBtnLib.addEventListener('click', onWatchedBtnclick);\n\nrefs.quereBtnLib.addEventListener('click', onQueueBtnclick);\n","export function createMarkupCardsForLibrary({\n  poster_path,\n  id,\n  title,\n  genres,\n  release_date,\n  vote_average,\n}) {\n  const genreNames = genres.map(el => el.name).join(', ');\n  const rating = vote_average.toFixed(2);\n  return `\n    <li data-id=\"${id}\" class=\"movie__item\">\n      <img class=\"movie__image\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"Poster of '${title}' movie\" width=\"394\" />\n      <h2 class=\"movie__title\">${title}</h2>\n      <p data-id=\"${id}\" class=\"movie__details\">\n          <span class=\"movie__genre\">${genreNames}</span\n          >|<span class=\"movie__year-of-relise\">${release_date.slice(\n            0,\n            4\n          )}</span><span class=\"movie__rating\">${rating}</span>\n      </p>\n    </li>`;\n}\n","import { createNotificationMarkup } from '../markup/markup-notification';\nimport { refs } from './refs';\n\nexport function typeWriterEffect(name) {\n  window.addEventListener('load', event => {\n    refs.notifi.innerHTML = createNotificationMarkup(name);\n    const timer = document.querySelector('.type');\n    setTimeout(function () {\n      timer.style.opacity = 1;\n    }, 1000);\n  });\n}\n","export function createNotificationMarkup(name) {\n  return `<li class=\"typewriter\">\n        <h2 class=\"type\">\n          You'r ${name} is empty, go to <span><a href=\"./index.html\" class=\"orange--loror\" aria-label=\"link for Home\"\n          >HOME</a\n        ></span> page for movies search :)\n        </h2>\n      </li>\n      `;\n}\n"],"names":["parcelRequire","$5g02X","$0188f6725ff8ba52$export$8592154eba171398","poster_path","id","title","genres","release_date","vote_average","genreNames","map","el","name","join","rating","toFixed","slice","$4Nugj","refs","gallery","innerHTML","libraryLocStorage","localStorage","getItem","JSON","parse","length","classList","add","notifi","remove","window","addEventListener","event","timer","document","querySelector","setTimeout","style","opacity","forEach","element","fetchByMovieId","then","res","insertAdjacentHTML","data","catch","err","console","log","$6376694b3a2300aa$var$startPageLibrary","watchedBtnLib","watchedLocStorage","$4LMMA","loadFromLocStorage","quereBtnLib","queueLocStorage"],"version":3,"file":"library.26992ba6.js.map"}